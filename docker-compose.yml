version: "3.7"

services:
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=testing
      - POSTGRES_PASSWORD=testing
      - POSTGRES_DB=testing
    ports:
      - "5432:5432"
    networks:
      - clutch_network
    restart: always

  bizlocker:
    build:
      context: .
      dockerfile: Dockerfile_Prod
    depends_on:
      - postgres
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=${DATABASE_URL_PROD}
      - SITE_URL=${SITE_URL_PROD}
      - SESSION_SECRET=${SESSION_SECRET}
      - PORT=${PORT}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - AWS_ACCESS=${AWS_ACCESS}
      - AWS_SECRET=${AWS_SECRET}
      - AWS_BUCKET=${AWS_BUCKET}
      - SQUARE_ACCESS=${SQUARE_ACCESS}
      - SENDGRID_KEY=${SENDGRID_KEY}
      - AUSPOST_ACCESS=${AUSPOST_ACCESS}
    networks:
      - clutch_network
    restart: on-failure:5

  bizlocker-dev:
    build:
      context: .
      dockerfile: Dockerfile_Dev
    depends_on:
      - postgres
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=${DATABASE_URL_PROD}
      - SITE_URL=${SITE_URL_PROD}
      - SESSION_SECRET=${SESSION_SECRET}
      - PORT=${PORT}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - AWS_ACCESS=${AWS_ACCESS}
      - AWS_SECRET=${AWS_SECRET}
      - AWS_BUCKET=${AWS_BUCKET}
      - SQUARE_ACCESS=${SQUARE_ACCESS}
      - SENDGRID_KEY=${SENDGRID_KEY}
      - AUSPOST_ACCESS=${AUSPOST_ACCESS}
    networks:
      - clutch_network
    restart: on-failure:5

networks:
  clutch_network:
    driver: bridge
